use std::env;
use std::fs::File;
use std::io::{self, BufRead, Write};

/*
 * Complete the 'timeConversion' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts STRING s as parameter.
 */

fn timeConversion(s: &str) -> String {
     let (time, period) = s.split_at(8); 
    let (hour_str, rest) = time.split_at(2); 
    let rest = &rest[1..];
    let hour: i32 = hour_str.parse().unwrap(); 

    let new_hour = match (hour, period.trim()) {
        (12, "AM") => "00".to_string(), 
        (12, "PM") => "12".to_string(), 
        (h, "AM") => format!("{:02}", h), 
        (h, "PM") => format!("{:02}", h + 12), 
        _ => hour_str.to_string(), 
    };

    format!("{}:{}", new_hour, rest)
}

fn main() {
    let stdin = io::stdin();
    let mut stdin_iterator = stdin.lock().lines();

    let mut fptr = File::create(env::var("OUTPUT_PATH").unwrap()).unwrap();

    let s = stdin_iterator.next().unwrap().unwrap();

    let result = timeConversion(&s);

    writeln!(&mut fptr, "{}", result).ok();
}
